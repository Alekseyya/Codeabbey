using System;
using System.Collections.Generic;
using System.IO;
using System.Linq;
using System.Text;
using System.Threading.Tasks;

//Neumann's Random Generator
/// <summary>
/// Случайные числа часто нужны при программировании игр или в научных исследованиях. Не менее нужны они и в обычных бизнес-приложениях (вспомните генерацию уникальных ключей, паролей). Как устроены генераторы случайных чисел? Вот один из старинных и несложных алгоритмов - хотя он носит имя фон-Нейманна, по-видимому он был известен много веков назад.

///Возьмём некое исходное четырехзначное число(т.е.в диапазоне 0000 ... 9999).
/// Возведем его в квадрат(т.е.умножим на себя же) и получим число с 8 знаками(добавим ведущие нули при необходимости).
/// Обрежем два первых и два последних знака в десятичном представлении результата.
///Новое значение опять содержит 4 цифры и мы используем его как следующее число в последовательности.
///Чтобы получить дальнейшие значения - повторяем с пункта 2.

/// </summary>
/// 5761                      - вот исходное число
///5761 * 5761 = 33189121    - возвели в квадрат
///33(1891)21 => 1891        - вырезали 4 цифры из середины

///1891                      - итак, это второе число последовательности
///1891 * 1891 = 3575881     - возведем в квадрат(нужно приписать ведущий ноль чтоб стало 8 цифр)
///03(5758)81 => 5758        - вырезаем 4 знака из середины

///5758                      - итак, это третье число последовательности(и так далее...)


///Входные данные содержат количество тестов в первой строке.
///Вторая строка содержит сами тесты - начальные значения последовательностей, через пробел.
///Ответ должен содержать количество итераций до повторения для каждой последовательности.

//Подсказка: Чтобы обрезать 8-значное число, поделите на 100 а потом возьмите остаток от деления на 10000.

namespace Task_24
{
    class Program
    {
        static public List<int> arr;
        static public List<int> answer;
        static void Main(string[] args)
        {
            ReadFile();
            foreach (var item in answer)
            {
                Console.Write(item + " ");
            }
            
            Console.ReadKey();
        }
        static bool Test(int number)
        {
            foreach (var item in arr)
            {
                if (item == number)
                    return true;
                
            }
            return false;
        }
        static void ReadFile()
        {
            int[] arrInt = File.ReadAllText(@"C:\Work\Codeabbey\Task_24\file.txt", Encoding.UTF8).Split(' ').Select(Int32.Parse).ToArray();
            int tmp = 0;
            answer = new List<int>();
            
            for (int i = 0; i < arrInt.Length; i++)
            {
                tmp = arrInt[i];
                arr = new List<int>();
                int count = 0;
                do
                {
                    arr.Add(tmp);
                    tmp = tmp * tmp;
                    tmp = (tmp / 100) % 10000;
                    
                    count++;

                } while (!Test(tmp));
                answer.Add(count);
            }
        }
    }
}
